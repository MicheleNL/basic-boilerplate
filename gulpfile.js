"use strict";

// Require modules
var gulp = require("gulp"),
  autoprefixer = require("gulp-autoprefixer"),
  header = require("gulp-header"),
  rename = require("gulp-rename"),
  browserSync = require("browser-sync").create(),
  sass = require("gulp-sass")(require("sass")),
  sassGlob = require("gulp-sass-glob-import"),
  notify = require("gulp-notify"),
  concat = require("gulp-concat"),
  uglify = require("gulp-uglify");

// BrowserSync paths
var src = {
  scss: "assets/styles/**/*.scss",
  js: "assets/scripts/**/*.js",
  html: "*.html",
};

/**
 * Handle errors with Gulp Notify
 */
function handleErrors() {
  var args = Array.prototype.slice.call(arguments);
  notify
    .onError({
      title: "Compile Error",
      message: "<%= error.message %>",
    })
    .apply(this, args);
  this.emit("end"); // Keep gulp from hanging on this task
}

var banner = {
  content:
    "/*!\n" +
    " * DO NOT EDIT THIS FILE!\n" +
    " * Generated by Gulp in " +
    new Date().getFullYear() +
    "\n" +
    " */\n\n",
};

/**
 *  Sass actions: compiling, autoprefix, banner, minify & output
 */
gulp.task("sass", function () {
  return gulp
    .src(src.scss)
    .pipe(sassGlob())
    .pipe(
      sass({
        outputStyle: "compressed",
      })
    )
    .on("error", handleErrors)
    .pipe(
      autoprefixer({
        overrideBrowserslist: ["last 2 versions"],
      })
    )
    .pipe(header(banner.content))
    .pipe(rename("style.min.css"))
    .pipe(gulp.dest("./"))
    .pipe(browserSync.reload({ stream: true }));
});

/**
 * Concat, minify and check errors in JS files
 */
gulp.task("scripts", function () {
  return gulp
    .src(src.js)
    .pipe(concat("scripts.js"))
    .pipe(uglify())
    .on("error", handleErrors)
    .pipe(rename("scripts.min.js"))
    .pipe(gulp.dest("./"))
    .pipe(browserSync.reload({ stream: true }));
});

/**
 *  BrowserSync
 */
gulp.task(
  "serve",
  gulp.parallel(["sass", "scripts"], function () {
    browserSync.init({
      server: {
        baseDir: "./",
      },
    });
    gulp.watch(src.scss, gulp.parallel("sass"));
    gulp.watch(src.js, gulp.parallel("scripts"));
    gulp.watch(src.html).on("change", browserSync.reload);
  })
);

/**
 * Build all and watch
 */
gulp.task("default", gulp.parallel("serve"));
